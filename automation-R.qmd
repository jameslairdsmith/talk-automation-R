---
format:
  revealjs: 
    slide-number: true
    css: styles.css
    slide-level: 3
    mouse-wheel: true
    execute:
      echo: true
      warning: false
    output-file: index.html
    show-notes: false
---

## Automating tasks with R {style="margin-top: 0em;"}

> James Laird-Smith
```{r}
#| include: false
old.hooks <- fansi::set_knit_hooks(knitr::knit_hooks)
options(crayon.enabled=TRUE)
```

::: {style="margin-top: 2em; margin-bottom: 1em; font-size: 0.75em;"}
- Link to slides: [talk-automation-R.jameslairdsmith.com/](https://talk-automation-R.jameslairdsmith.com/)
- Github repo for talk: [jameslairdsmith/talk-automation-R](https://github.com/jameslairdsmith/talk-automation-R)
:::

## Agenda

Hello agenda!

## Why learn automation? {.smaller}

Automation is the logical extension of coding.


:::{.callout-note icon=false appearance="minimal"}
Given that you have some operation.
:::

. . .

<u>Step 1: Re-write in code</u>

- Pain: Learn to code
- Gain: Can then re-run at zero effort (among other things)

. . .

<u>Step 2: Automate</u>

- Pain: Learn an automation tool
- Gain: Can then re-run at zero effort **even when you are not there**

::: {.notes}
I see automation as the logical extension of coding.
:::

## How can you automate? {.smaller}

:::{.callout-note}
R itself is not an automation tool. 
Rather, it interfaces with other purpose-built tools.
:::

- Cron
- Apache Airflow
- Windows Task Scheduler
- RStudio Connect
- Jenkins
- Many more...


::: {.notes}
No programming language is actually an automation tool.

To have an automation tool, you need an always on server with a daemon running in the background.

I'm betting that for many of you, automation is something hidden away, mysterious.

Varying levels of maturity and sophistication.

These each have their pros and cons.
:::


## Cron {.smaller}


> In the beginning God created the heavens and the earth ... but also the Cron utility for Unix.^[Gospel according to James.]

. . .

- Cron is the lingua franca of automation. Other tools will accept Cron syntax.
- Very old, widely used and well understood.
  - If you are running MacOS or Linux, it's likely already on your computer.
- Minimal and easy to get started with.

<br>

::: {.notes}
I think Cron is a good tool to get started with.
:::



## Cron expressions {.smaller}

Cron has it's own syntax for job frequency and schedule.



```markdown
* * * * *
| | | | |
| | | | +---- Day of the Week   (range: 0-6, 0 is Sunday)
| | | +------ Month of the Year (range: 1-12)
| | +-------- Day of the Month  (range: 1-31)
| +---------- Hour              (range: 0-23)
+------------ Minute            (range: 0-59)
```
Example:
```markdown
# Comment lines start with hastags
0 0 * * * echo 'Hello midnight!'
0 0 1 1 * echo 'Hello New Year!'
0 0 25 * * echo 'Hello payday!'
* * * * * Rscript -e 'print("Hello R!")'
* * * * * python -c 'print("Hello Python!")'
```

<br>
<br>

::: aside
Adapted from: [https://www.maximehuran.fr/en/create-a-cron-job-with-magento-2/](https://www.maximehuran.fr/en/create-a-cron-job-with-magento-2/)
:::

::: {.notes}
This is a simplified version. Cron has a richer syntax than this.
:::

:::{style="text-align: center;"}
# Thank you! 

Questions?
:::